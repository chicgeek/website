{"version":3,"sources":["js/App.js","js/data.js","serviceWorker.js","index.js"],"names":["App","props","getItems","bind","handleBodyClick","handleTitleClick","focus","blur","handleEscapeKey","document","addEventListener","this","removeEventListener","e","node","contains","target","key","id","activeElement","data","map","section","className","children","title","tabIndex","onFocus","onMouseDown","content","ref","Component","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.123146a7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./../css/app.scss\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.getItems = this.getItems.bind(this);\n    this.handleBodyClick = this.handleBodyClick.bind(this);\n    this.handleTitleClick = this.handleTitleClick.bind(this);\n    this.focus = this.focus.bind(this);\n    this.blur = this.blur.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleBodyClick, false);\n    document.addEventListener(\"keydown\", this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleBodyClick, false);\n    document.removeEventListener(\"keydown\", this.handleEscapeKey, false);\n  }\n\n  handleBodyClick(e) {\n    if (this.node.contains(e.target)) {\n      return;\n    }\n    this.blur();\n  }\n\n  handleEscapeKey(e) {\n    if (e.key === \"Escape\") {\n      this.blur();\n    }\n  }\n\n  handleTitleClick(e, id) {\n  }\n\n  focus(e, id) {\n    e.target.focus();\n  }\n\n  blur() {\n    document.activeElement.blur();\n  }\n\n  getItems(data) {\n    return data.map(section => {\n      return (\n        <section\n          key={section.id}\n          className=\"section\"\n        >\n          <h2\n            className={`section__heading heading heading--${section.id}`}\n            children={section.title}\n            tabIndex=\"0\"\n            onFocus={e => this.focus(e, section.id)}\n            onMouseDown={e => this.handleTitleClick(e, section.id)}\n          />\n          <div className=\"section__content\" children={section.content} />\n        </section>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div ref={node => (this.node = node)}>\n        {this.getItems(this.props.data)}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.element.isRequired,\n      content: PropTypes.element.isRequired\n    })\n  ).isRequired\n};\n\nexport default App;\n","import React, { Fragment } from \"react\";\n\nexport const data = [\n  {\n    id: \"person\",\n    title: (\n      <Fragment>\n        Personal <span>details</span>\n      </Fragment>\n    ),\n    content: (\n      <Fragment>\n        <h3>About me</h3>\n        <p>\n          I am a front end engineering manager with over 15 years of experience. In addition to being a technical authority, I am a leader of people and advocate for inclusive work cultures.\n        </p>\n        <p>\n          I'm a Canadian living and working in Sheffield&nbsp;UK. I have an MA in vocal music and love design, the outdoors, games, and red pandas.\n        </p>\n      </Fragment>\n    )\n  },\n  {\n    id: \"skills\",\n    title: (\n      <Fragment>\n        Developer <span>skills</span>\n      </Fragment>\n    ),\n    content: (\n      <Fragment>\n        <h3>User-centric approach</h3>\n        <p>\n          I focus on the intersection of user need, client demand, and technical limitation. I prioritise user experience, accessibility, and maintainability in my work.\n        </p>\n        <h3>Technologies and approaches</h3>\n        <p>\n          I work with my teams on modern architectures to deliver beautiful and efficient websites using HTML, CSS, JavaScript. I guide our component-driven approaches, ensuring quality code, modularity, and maintainability.\n        </p>\n      </Fragment>\n    )\n  },\n  {\n    id: \"leadership\",\n    title: (\n      <Fragment>\n        <span>People</span> leadership\n      </Fragment>\n    ),\n    content: (\n      <Fragment>\n        <h3>Leader and mentor</h3>\n        <p>\n          I am a reliable and trusted member of any team. I earn the respect of my coworkers through leadership and enabling and empowering others to do their best. I am an empathetic and supportive manager, guiding individuals and entire teams to learn, share, and become more efficient.\n        </p>\n        <h3>Culture and community</h3>\n        <p>\n          I strive to create and encourage a safe and inclusive work environment for everyone. Outside of work, I organise{\" \"}\n          <a href=\"https://twitter.com/frontendsheff\">\n            Front&nbsp;End Sheffield\n          </a>\n          , <a href=\"https://twitter.com/frontendnorth\">Front&nbsp;End North</a>\n          , and have previously organised Sheffield&nbsp;JS.\n        </p>\n      </Fragment>\n    )\n  },\n  {\n    id: \"jobs\",\n    title: (\n      <Fragment>\n        Employment <span>history</span>\n      </Fragment>\n    ),\n    content: (\n      <Fragment>\n        <ul>\n          <li>\n            <h3>\n              <a href=\"https://prolific.co/\">Prolific</a>\n            </h3>\n            Head of engineering (interim), engineering&nbsp;manager\n            (2021&nbsp;&#8209;&nbsp;present)\n          </li>\n          <li>\n            <h3>\n              <a href=\"https://inviqa.com/\">Inviqa</a>\n            </h3>\n            Software&nbsp;engineering&nbsp;manager, technical&nbsp;team&nbsp;lead, front&nbsp;end&nbsp;developer\n            (2013&nbsp;&#8209;&nbsp;2021)\n          </li>\n          <li>\n            <h3>\n              <a href=\"https://www.evoluted.net/\">Evoluted</a>\n            </h3>\n            Lead front end developer (2017&nbsp;&#8209;&nbsp;2018)\n          </li>\n          <li>\n            <h3>My CV</h3>\n            <a href=\"http://bit.ly/chicgeek-cv\">Laura Kishimoto</a>\n          </li>\n        </ul>\n      </Fragment>\n    )\n  },\n  {\n    id: \"contact\",\n    title: (\n      <Fragment>\n        Contact me <span>online</span>\n      </Fragment>\n    ),\n    content: (\n      <Fragment>\n        <ul>\n          <li>\n            <a href=\"https://www.twitter.com/chicgeek\">chicgeek on Twitter</a>\n          </li>\n          <li>\n            <a rel=\"me\" href=\"https://mastodon.social/@chicgeek\">\n              chicgeek on Mastodon.social\n            </a>\n          </li>\n          <li>\n            <a href=\"https://www.github.com/chicgeek\">chicgeek on Github</a>\n          </li>\n          <li>\n            <a href=\"https://www.linkedin.com/in/chicgeek\">\n              chicgeek on LinkedIn\n            </a>\n          </li>\n          <li>\n            <a href=\"mailto:laura@chicgeek.uk?subject=An email from chicgeek.uk\">\n              Email me at laura@chicgeek.uk\n            </a>\n          </li>\n        </ul>\n      </Fragment>\n    )\n  }\n];\n\nexport default data;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './js/App';\nimport data from './js/data';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App data={data} />,\n    document.getElementById('main')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}